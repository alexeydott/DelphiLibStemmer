/*
 * libstemmer_amalgamation.h - Combined header file for libstemmer
 *
 * This file was automatically generated by the libstemmer amalgamation script.
 * It contains all the necessary header declarations from the libstemmer project
 * combined into a single file.
 *
 * Generated on: 2025-07-17 23:36:06
 * Generated by: user3486788
 */

#ifndef LIBSTEMMER_AMALGAMATION_H
#define LIBSTEMMER_AMALGAMATION_H

/* Standard library includes */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdint.h>

#define BUILDING_LIBSTEMMER
#define _LIB

/* Export definitions */
#ifdef _WIN32
  #ifdef BUILDING_LIBSTEMMER
	#ifdef STEMMER_DYNAMIC
	  /* When building DLL */
	  #define STEMMER_API
	  #define STEMMER_API_PUBLIC __declspec(dllexport)
	#else
	  /* When building static library */
	  #define STEMMER_API __declspec(dllexport)
	  #define STEMMER_API_PUBLIC __declspec(dllexport)
	#endif
  #else
	/* When consuming the library */
	#ifdef STEMMER_DYNAMIC
	  #define STEMMER_API
	  #define STEMMER_API_PUBLIC __declspec(dllimport)
	#else
	  #define STEMMER_API
	  #define STEMMER_API_PUBLIC
	#endif
  #endif
#else
  /* Non-Windows platforms */
  #define STEMMER_API
  #define STEMMER_API_PUBLIC
#endif

/* Define STEMMER_DYNAMIC when building DLL configurations */
#if defined(_DLL) || defined(_WINDLL) || defined(_USRDLL)
#  define STEMMER_DYNAMIC
#endif

/* C++ extern "C" guard - opening */
#ifdef __cplusplus
extern "C" {
#endif


/* From runtime/api.h */
// #include "include/stemmer_exports.h" - amalgamated

// #include <stdint.h> // for intptr_t type  - amalgamated


typedef unsigned char symbol;

/* Or replace 'char' above with 'short' for 16 bit characters.

   More precisely, replace 'char' with whatever type guarantees the
   character width you need. Note however that sizeof(symbol) should divide
   HEAD, defined in header.h as 2*sizeof(int), without remainder, otherwise
   there is an alignment problem. In the unlikely event of a problem here,
   consult Martin Porter.

*/

struct SN_env {
    symbol * p;
    int c; int l; int lb; int bra; int ket;
    intptr_t af; /* function pointer */
    symbol * * S;
    int * I;
};

#ifdef __cplusplus
extern "C" {
#endif

extern struct SN_env * SN_create_env(int S_size, int I_size);
extern void SN_close_env(struct SN_env * z, int S_size);

extern int SN_set_current(struct SN_env * z, int size, const symbol * s);

#ifdef __cplusplus
}
#endif

/* From runtime/header.h */
/* Macros to handle the optional parameter in find_among functions */
#if defined(_MSC_VER) || defined(__BORLANDC__)
#define find_among(a,b,c) find_among_impl(a,b,c,0)
#define find_among_b(a,b,c) find_among_b_impl(a,b,c,0)
#endif

#if defined(__BORLANDC__)
#pragma warn -8066 // disable unreachable code warning
#endif
// #include "include/stemmer_exports.h" - amalgamated

// #include <stdint.h> // for intptr_t type  - amalgamated


// #include "api.h" - amalgamated

#define HEAD 2*sizeof(int)

#define SIZE(p)        ((int *)(p))[-1]
#define SET_SIZE(p, n) ((int *)(p))[-1] = n
#define CAPACITY(p)    ((int *)(p))[-2]

struct among
{
    /* Number of symbols in s. */
    int s_size;
    /* Search string. */
    const symbol * s;
    /* Delta of index to longest matching substring, or 0 if none. */
    int substring_i;
    /* Result of the lookup. */
    int result;
    /* Optional condition routine index, or 0 if none. */
    intptr_t function; /* function pointer */
};

extern STEMMER_API symbol * create_s(void);
extern STEMMER_API void lose_s(symbol * p);

extern STEMMER_API int skip_utf8(const symbol * p, int c, int limit, int n);

extern STEMMER_API int skip_b_utf8(const symbol * p, int c, int limit, int n);

extern STEMMER_API int in_grouping_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);
extern STEMMER_API int in_grouping_b_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);
extern STEMMER_API int out_grouping_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);
extern STEMMER_API int out_grouping_b_U(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);

extern STEMMER_API int in_grouping(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);
extern STEMMER_API int in_grouping_b(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);
extern STEMMER_API int out_grouping(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);
extern STEMMER_API int out_grouping_b(struct SN_env * z, const unsigned char * s, int min, int max, int repeat);

extern STEMMER_API int eq_s(struct SN_env * z, int s_size, const symbol * s);
extern STEMMER_API int eq_s_b(struct SN_env * z, int s_size, const symbol * s);
extern STEMMER_API int eq_v(struct SN_env * z, const symbol * p);
extern STEMMER_API int eq_v_b(struct SN_env * z, const symbol * p);

extern STEMMER_API int find_among_impl(struct SN_env * z, const struct among * v, int v_size, intptr_t f);
extern STEMMER_API int find_among_b_impl(struct SN_env * z, const struct among * v, int v_size, intptr_t f);

extern STEMMER_API int replace_s(struct SN_env * z, int c_bra, int c_ket, int s_size, const symbol * s, int * adjustment);
extern STEMMER_API int slice_from_s(struct SN_env * z, int s_size, const symbol * s);
extern STEMMER_API int slice_from_v(struct SN_env * z, const symbol * p);
extern STEMMER_API int slice_del(struct SN_env * z);

extern STEMMER_API int insert_s(struct SN_env * z, int bra, int ket, int s_size, const symbol * s);
extern STEMMER_API int insert_v(struct SN_env * z, int bra, int ket, const symbol * p);

extern STEMMER_API symbol * slice_to(struct SN_env * z, symbol * p);
extern STEMMER_API symbol * assign_to(struct SN_env * z, symbol * p);

extern STEMMER_API int len_utf8(const symbol * p);

extern STEMMER_API void debug(struct SN_env * z, int number, int line_count);

/* From include/libstemmer.h */
// #include "include/stemmer_exports.h" - amalgamated


/* Make header file work when included from C++ */
#ifdef __cplusplus
extern "C" {
#endif

struct sb_stemmer;
typedef unsigned char sb_symbol;

/* FIXME - should be able to get a version number for each stemming
 * algorithm (which will be incremented each time the output changes). */

/** Returns an array of the names of the available stemming algorithms.
 *  Note that these are the canonical names - aliases (ie, other names for
 *  the same algorithm) will not be included in the list.
 *  The list is terminated with a null pointer.
 *
 *  The list must not be modified in any way.
 */
STEMMER_API_PUBLIC const char ** sb_stemmer_list(void);

/** Create a new stemmer object, using the specified algorithm, for the
 *  specified character encoding.
 *
 *  All algorithms will usually be available in UTF-8, but may also be
 *  available in other character encodings.
 *
 *  @param algorithm The algorithm name.  This is either the english
 *  name of the algorithm, or the 2 or 3 letter ISO 639 codes for the
 *  language.  Note that case is significant in this parameter - the
 *  value should be supplied in lower case.
 *
 *  @param charenc The character encoding.  NULL may be passed as
 *  this value, in which case UTF-8 encoding will be assumed. Otherwise,
 *  the argument may be one of "UTF_8", "ISO_8859_1" (i.e. Latin 1),
 *  "ISO_8859_2" (i.e. Latin 2) or "KOI8_R" (Russian).  Note that case is
 *  significant in this parameter.
 *
 *  @return NULL if the specified algorithm is not recognised, or the
 *  algorithm is not available for the requested encoding.  Otherwise,
 *  returns a pointer to a newly created stemmer for the requested algorithm.
 *  The returned pointer must be deleted by calling sb_stemmer_delete().
 *
 *  @note NULL will also be returned if an out of memory error occurs.
 */
STEMMER_API_PUBLIC struct sb_stemmer * sb_stemmer_new(const char * algorithm, const char * charenc);

/** Delete a stemmer object.
 *
 *  This frees all resources allocated for the stemmer.  After calling
 *  this function, the supplied stemmer may no longer be used in any way.
 *
 *  It is safe to pass a null pointer to this function - this will have
 *  no effect.
 */
STEMMER_API_PUBLIC void                sb_stemmer_delete(struct sb_stemmer * stemmer);

/** Stem a word.
 *
 *  The stemming algorithms generally expect the input text to use composed
 *  accents (Unicode NFC or NFKC) and to have been folded to lower case
 *  already.
 *
 *  The return value is owned by the stemmer - it must not be freed or
 *  modified, and it will become invalid when the stemmer is called again,
 *  or if the stemmer is freed.
 *
 *  The length of the return value can be obtained using sb_stemmer_length().
 *
 *  If an out-of-memory error occurs, this will return NULL.
 */
STEMMER_API_PUBLIC const sb_symbol *   sb_stemmer_stem(struct sb_stemmer * stemmer,
                                    const sb_symbol * word, int size);

/** Get the length of the result of the last stemmed word.
 *  This should not be called before sb_stemmer_stem() has been called.
 */
STEMMER_API_PUBLIC int                 sb_stemmer_length(struct sb_stemmer * stemmer);

#ifdef __cplusplus
}
#endif

/* From src_c/stem_UTF_8_portuguese.h */
#ifndef __STEM_UTF_8_PORTUGUESE_H_H
#define __STEM_UTF_8_PORTUGUESE_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from portuguese.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * portuguese_UTF_8_create_env(void);
extern STEMMER_API void portuguese_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int portuguese_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_PORTUGUESE_H_H */

/* From src_c/stem_UTF_8_german.h */
#ifndef __STEM_UTF_8_GERMAN_H_H
#define __STEM_UTF_8_GERMAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from german.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * german_UTF_8_create_env(void);
extern STEMMER_API void german_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int german_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_GERMAN_H_H */

/* From src_c/stem_UTF_8_dutch_porter.h */
#ifndef __STEM_UTF_8_DUTCH_PORTER_H_H
#define __STEM_UTF_8_DUTCH_PORTER_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from dutch_porter.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * dutch_porter_UTF_8_create_env(void);
extern STEMMER_API void dutch_porter_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int dutch_porter_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_DUTCH_PORTER_H_H */

/* From src_c/stem_UTF_8_irish.h */
#ifndef __STEM_UTF_8_IRISH_H_H
#define __STEM_UTF_8_IRISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from irish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * irish_UTF_8_create_env(void);
extern STEMMER_API void irish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int irish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_IRISH_H_H */

/* From src_c/stem_UTF_8_norwegian.h */
#ifndef __STEM_UTF_8_NORWEGIAN_H_H
#define __STEM_UTF_8_NORWEGIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from norwegian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * norwegian_UTF_8_create_env(void);
extern STEMMER_API void norwegian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int norwegian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_NORWEGIAN_H_H */

/* From src_c/stem_KOI8_R_russian.h */
#ifndef __STEM_KOI8_R_RUSSIAN_H_H
#define __STEM_KOI8_R_RUSSIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from russian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * russian_KOI8_R_create_env(void);
extern STEMMER_API void russian_KOI8_R_close_env(struct SN_env * z);

extern STEMMER_API int russian_KOI8_R_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_KOI8_R_RUSSIAN_H_H */

/* From src_c/stem_UTF_8_turkish.h */
#ifndef __STEM_UTF_8_TURKISH_H_H
#define __STEM_UTF_8_TURKISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from turkish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * turkish_UTF_8_create_env(void);
extern STEMMER_API void turkish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int turkish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_TURKISH_H_H */

/* From src_c/stem_UTF_8_hungarian.h */
#ifndef __STEM_UTF_8_HUNGARIAN_H_H
#define __STEM_UTF_8_HUNGARIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from hungarian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * hungarian_UTF_8_create_env(void);
extern STEMMER_API void hungarian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int hungarian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_HUNGARIAN_H_H */

/* From src_c/stem_UTF_8_italian.h */
#ifndef __STEM_UTF_8_ITALIAN_H_H
#define __STEM_UTF_8_ITALIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from italian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * italian_UTF_8_create_env(void);
extern STEMMER_API void italian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int italian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ITALIAN_H_H */

/* From src_c/stem_UTF_8_swedish.h */
#ifndef __STEM_UTF_8_SWEDISH_H_H
#define __STEM_UTF_8_SWEDISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from swedish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * swedish_UTF_8_create_env(void);
extern STEMMER_API void swedish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int swedish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_SWEDISH_H_H */

/* From src_c/stem_UTF_8_lithuanian.h */
#ifndef __STEM_UTF_8_LITHUANIAN_H_H
#define __STEM_UTF_8_LITHUANIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from lithuanian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * lithuanian_UTF_8_create_env(void);
extern STEMMER_API void lithuanian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int lithuanian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_LITHUANIAN_H_H */

/* From src_c/stem_ISO_8859_2_hungarian.h */
#ifndef __STEM_ISO_8859_2_HUNGARIAN_H_H
#define __STEM_ISO_8859_2_HUNGARIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from hungarian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * hungarian_ISO_8859_2_create_env(void);
extern STEMMER_API void hungarian_ISO_8859_2_close_env(struct SN_env * z);

extern STEMMER_API int hungarian_ISO_8859_2_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_2_HUNGARIAN_H_H */

/* From src_c/stem_ISO_8859_1_irish.h */
#ifndef __STEM_ISO_8859_1_IRISH_H_H
#define __STEM_ISO_8859_1_IRISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from irish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * irish_ISO_8859_1_create_env(void);
extern STEMMER_API void irish_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int irish_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_IRISH_H_H */

/* From src_c/stem_UTF_8_english.h */
#ifndef __STEM_UTF_8_ENGLISH_H_H
#define __STEM_UTF_8_ENGLISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from english.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * english_UTF_8_create_env(void);
extern STEMMER_API void english_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int english_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ENGLISH_H_H */

/* From src_c/stem_UTF_8_nepali.h */
#ifndef __STEM_UTF_8_NEPALI_H_H
#define __STEM_UTF_8_NEPALI_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from nepali.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * nepali_UTF_8_create_env(void);
extern STEMMER_API void nepali_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int nepali_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_NEPALI_H_H */

/* From src_c/stem_UTF_8_armenian.h */
#ifndef __STEM_UTF_8_ARMENIAN_H_H
#define __STEM_UTF_8_ARMENIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from armenian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * armenian_UTF_8_create_env(void);
extern STEMMER_API void armenian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int armenian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ARMENIAN_H_H */

/* From src_c/stem_ISO_8859_1_dutch_porter.h */
#ifndef __STEM_ISO_8859_1_DUTCH_PORTER_H_H
#define __STEM_ISO_8859_1_DUTCH_PORTER_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from dutch_porter.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * dutch_porter_ISO_8859_1_create_env(void);
extern STEMMER_API void dutch_porter_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int dutch_porter_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_DUTCH_PORTER_H_H */

/* From src_c/stem_UTF_8_dutch.h */
#ifndef __STEM_UTF_8_DUTCH_H_H
#define __STEM_UTF_8_DUTCH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from dutch.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * dutch_UTF_8_create_env(void);
extern STEMMER_API void dutch_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int dutch_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_DUTCH_H_H */

/* From src_c/stem_UTF_8_tamil.h */
#ifndef __STEM_UTF_8_TAMIL_H_H
#define __STEM_UTF_8_TAMIL_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from tamil.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * tamil_UTF_8_create_env(void);
extern STEMMER_API void tamil_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int tamil_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_TAMIL_H_H */

/* From src_c/stem_ISO_8859_1_swedish.h */
#ifndef __STEM_ISO_8859_1_SWEDISH_H_H
#define __STEM_ISO_8859_1_SWEDISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from swedish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * swedish_ISO_8859_1_create_env(void);
extern STEMMER_API void swedish_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int swedish_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_SWEDISH_H_H */

/* From src_c/stem_ISO_8859_1_italian.h */
#ifndef __STEM_ISO_8859_1_ITALIAN_H_H
#define __STEM_ISO_8859_1_ITALIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from italian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * italian_ISO_8859_1_create_env(void);
extern STEMMER_API void italian_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int italian_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_ITALIAN_H_H */

/* From src_c/stem_ISO_8859_1_norwegian.h */
#ifndef __STEM_ISO_8859_1_NORWEGIAN_H_H
#define __STEM_ISO_8859_1_NORWEGIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from norwegian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * norwegian_ISO_8859_1_create_env(void);
extern STEMMER_API void norwegian_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int norwegian_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_NORWEGIAN_H_H */

/* From src_c/stem_ISO_8859_1_indonesian.h */
#ifndef __STEM_ISO_8859_1_INDONESIAN_H_H
#define __STEM_ISO_8859_1_INDONESIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from indonesian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * indonesian_ISO_8859_1_create_env(void);
extern STEMMER_API void indonesian_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int indonesian_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_INDONESIAN_H_H */

/* From src_c/stem_UTF_8_danish.h */
#ifndef __STEM_UTF_8_DANISH_H_H
#define __STEM_UTF_8_DANISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from danish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * danish_UTF_8_create_env(void);
extern STEMMER_API void danish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int danish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_DANISH_H_H */

/* From src_c/stem_UTF_8_spanish.h */
#ifndef __STEM_UTF_8_SPANISH_H_H
#define __STEM_UTF_8_SPANISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from spanish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * spanish_UTF_8_create_env(void);
extern STEMMER_API void spanish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int spanish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_SPANISH_H_H */

/* From src_c/stem_ISO_8859_1_basque.h */
#ifndef __STEM_ISO_8859_1_BASQUE_H_H
#define __STEM_ISO_8859_1_BASQUE_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from basque.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * basque_ISO_8859_1_create_env(void);
extern STEMMER_API void basque_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int basque_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_BASQUE_H_H */

/* From src_c/stem_UTF_8_hindi.h */
#ifndef __STEM_UTF_8_HINDI_H_H
#define __STEM_UTF_8_HINDI_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from hindi.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * hindi_UTF_8_create_env(void);
extern STEMMER_API void hindi_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int hindi_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_HINDI_H_H */

/* From src_c/stem_UTF_8_arabic.h */
#ifndef __STEM_UTF_8_ARABIC_H_H
#define __STEM_UTF_8_ARABIC_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from arabic.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * arabic_UTF_8_create_env(void);
extern STEMMER_API void arabic_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int arabic_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ARABIC_H_H */

/* From src_c/stem_ISO_8859_1_finnish.h */
#ifndef __STEM_ISO_8859_1_FINNISH_H_H
#define __STEM_ISO_8859_1_FINNISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from finnish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * finnish_ISO_8859_1_create_env(void);
extern STEMMER_API void finnish_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int finnish_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_FINNISH_H_H */

/* From src_c/stem_UTF_8_greek.h */
#ifndef __STEM_UTF_8_GREEK_H_H
#define __STEM_UTF_8_GREEK_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from greek.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * greek_UTF_8_create_env(void);
extern STEMMER_API void greek_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int greek_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_GREEK_H_H */

/* From src_c/stem_UTF_8_indonesian.h */
#ifndef __STEM_UTF_8_INDONESIAN_H_H
#define __STEM_UTF_8_INDONESIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from indonesian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * indonesian_UTF_8_create_env(void);
extern STEMMER_API void indonesian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int indonesian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_INDONESIAN_H_H */

/* From src_c/stem_UTF_8_romanian.h */
#ifndef __STEM_UTF_8_ROMANIAN_H_H
#define __STEM_UTF_8_ROMANIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from romanian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * romanian_UTF_8_create_env(void);
extern STEMMER_API void romanian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int romanian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ROMANIAN_H_H */

/* From src_c/stem_ISO_8859_1_porter.h */
#ifndef __STEM_ISO_8859_1_PORTER_H_H
#define __STEM_ISO_8859_1_PORTER_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from porter.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * porter_ISO_8859_1_create_env(void);
extern STEMMER_API void porter_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int porter_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_PORTER_H_H */

/* From src_c/stem_UTF_8_yiddish.h */
#ifndef __STEM_UTF_8_YIDDISH_H_H
#define __STEM_UTF_8_YIDDISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from yiddish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * yiddish_UTF_8_create_env(void);
extern STEMMER_API void yiddish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int yiddish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_YIDDISH_H_H */

/* From src_c/stem_ISO_8859_1_portuguese.h */
#ifndef __STEM_ISO_8859_1_PORTUGUESE_H_H
#define __STEM_ISO_8859_1_PORTUGUESE_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from portuguese.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * portuguese_ISO_8859_1_create_env(void);
extern STEMMER_API void portuguese_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int portuguese_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_PORTUGUESE_H_H */

/* From src_c/stem_UTF_8_russian.h */
#ifndef __STEM_UTF_8_RUSSIAN_H_H
#define __STEM_UTF_8_RUSSIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from russian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * russian_UTF_8_create_env(void);
extern STEMMER_API void russian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int russian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_RUSSIAN_H_H */

/* From src_c/stem_ISO_8859_1_spanish.h */
#ifndef __STEM_ISO_8859_1_SPANISH_H_H
#define __STEM_ISO_8859_1_SPANISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from spanish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * spanish_ISO_8859_1_create_env(void);
extern STEMMER_API void spanish_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int spanish_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_SPANISH_H_H */

/* From src_c/stem_ISO_8859_1_catalan.h */
#ifndef __STEM_ISO_8859_1_CATALAN_H_H
#define __STEM_ISO_8859_1_CATALAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from catalan.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * catalan_ISO_8859_1_create_env(void);
extern STEMMER_API void catalan_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int catalan_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_CATALAN_H_H */

/* From src_c/stem_UTF_8_estonian.h */
#ifndef __STEM_UTF_8_ESTONIAN_H_H
#define __STEM_UTF_8_ESTONIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from estonian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * estonian_UTF_8_create_env(void);
extern STEMMER_API void estonian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int estonian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ESTONIAN_H_H */

/* From src_c/stem_ISO_8859_1_french.h */
#ifndef __STEM_ISO_8859_1_FRENCH_H_H
#define __STEM_ISO_8859_1_FRENCH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from french.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * french_ISO_8859_1_create_env(void);
extern STEMMER_API void french_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int french_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_FRENCH_H_H */

/* From src_c/stem_UTF_8_finnish.h */
#ifndef __STEM_UTF_8_FINNISH_H_H
#define __STEM_UTF_8_FINNISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from finnish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * finnish_UTF_8_create_env(void);
extern STEMMER_API void finnish_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int finnish_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_FINNISH_H_H */

/* From src_c/stem_UTF_8_porter.h */
#ifndef __STEM_UTF_8_PORTER_H_H
#define __STEM_UTF_8_PORTER_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from porter.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * porter_UTF_8_create_env(void);
extern STEMMER_API void porter_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int porter_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_PORTER_H_H */

/* From src_c/stem_ISO_8859_1_danish.h */
#ifndef __STEM_ISO_8859_1_DANISH_H_H
#define __STEM_ISO_8859_1_DANISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from danish.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * danish_ISO_8859_1_create_env(void);
extern STEMMER_API void danish_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int danish_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_DANISH_H_H */

/* From src_c/stem_UTF_8_basque.h */
#ifndef __STEM_UTF_8_BASQUE_H_H
#define __STEM_UTF_8_BASQUE_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from basque.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * basque_UTF_8_create_env(void);
extern STEMMER_API void basque_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int basque_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_BASQUE_H_H */

/* From src_c/stem_ISO_8859_1_english.h */
#ifndef __STEM_ISO_8859_1_ENGLISH_H_H
#define __STEM_ISO_8859_1_ENGLISH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from english.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * english_ISO_8859_1_create_env(void);
extern STEMMER_API void english_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int english_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_ENGLISH_H_H */

/* From src_c/stem_UTF_8_serbian.h */
#ifndef __STEM_UTF_8_SERBIAN_H_H
#define __STEM_UTF_8_SERBIAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from serbian.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * serbian_UTF_8_create_env(void);
extern STEMMER_API void serbian_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int serbian_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_SERBIAN_H_H */

/* From src_c/stem_UTF_8_french.h */
#ifndef __STEM_UTF_8_FRENCH_H_H
#define __STEM_UTF_8_FRENCH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from french.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * french_UTF_8_create_env(void);
extern STEMMER_API void french_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int french_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_FRENCH_H_H */

/* From src_c/stem_UTF_8_esperanto.h */
#ifndef __STEM_UTF_8_ESPERANTO_H_H
#define __STEM_UTF_8_ESPERANTO_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from esperanto.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * esperanto_UTF_8_create_env(void);
extern STEMMER_API void esperanto_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int esperanto_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_ESPERANTO_H_H */

/* From src_c/stem_ISO_8859_1_dutch.h */
#ifndef __STEM_ISO_8859_1_DUTCH_H_H
#define __STEM_ISO_8859_1_DUTCH_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from dutch.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * dutch_ISO_8859_1_create_env(void);
extern STEMMER_API void dutch_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int dutch_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_DUTCH_H_H */

/* From src_c/stem_UTF_8_catalan.h */
#ifndef __STEM_UTF_8_CATALAN_H_H
#define __STEM_UTF_8_CATALAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from catalan.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * catalan_UTF_8_create_env(void);
extern STEMMER_API void catalan_UTF_8_close_env(struct SN_env * z);

extern STEMMER_API int catalan_UTF_8_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_UTF_8_CATALAN_H_H */

/* From src_c/stem_ISO_8859_1_german.h */
#ifndef __STEM_ISO_8859_1_GERMAN_H_H
#define __STEM_ISO_8859_1_GERMAN_H_H

// #include "include/stemmer_exports.h" - amalgamated

/* Generated from german.sbl by Snowball 3.0.1 - https://snowballstem.org/ */

#ifdef __cplusplus
extern STEMMER_API "C" {
#endif

extern STEMMER_API struct SN_env * german_ISO_8859_1_create_env(void);
extern STEMMER_API void german_ISO_8859_1_close_env(struct SN_env * z);

extern STEMMER_API int german_ISO_8859_1_stem(struct SN_env * z);

#ifdef __cplusplus
}
#endif



#endif /* __STEM_ISO_8859_1_GERMAN_H_H */

/* From libstemmer/modules.h */
#ifndef __MODULES_H_H
#define __MODULES_H_H

/* libstemmer/modules.h: List of stemming modules.
 *
 * This file is generated by mkmodules.pl from a list of module names.
 * Do not edit manually.
 *
 * Modules included by this file are: arabic, armenian, basque, catalan,
 * danish, dutch, dutch_porter, english, esperanto, estonian, finnish, french,
 * german, greek, hindi, hungarian, indonesian, irish, italian, lithuanian,
 * nepali, norwegian, porter, portuguese, romanian, russian, serbian, spanish,
 * swedish, tamil, turkish, yiddish
 */

// #include "include/stemmer_exports.h" - amalgamated

// #include "../src_c/stem_UTF_8_arabic.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_armenian.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_basque.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_basque.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_catalan.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_catalan.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_danish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_danish.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_dutch.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_dutch.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_dutch_porter.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_dutch_porter.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_english.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_english.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_esperanto.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_estonian.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_finnish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_finnish.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_french.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_french.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_german.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_german.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_greek.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_hindi.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_2_hungarian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_hungarian.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_indonesian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_indonesian.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_irish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_irish.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_italian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_italian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_lithuanian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_nepali.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_norwegian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_norwegian.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_porter.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_porter.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_portuguese.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_portuguese.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_romanian.h" - stem header already included in amalgamation
// #include "../src_c/stem_KOI8_R_russian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_russian.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_serbian.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_spanish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_spanish.h" - stem header already included in amalgamation
// #include "../src_c/stem_ISO_8859_1_swedish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_swedish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_tamil.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_turkish.h" - stem header already included in amalgamation
// #include "../src_c/stem_UTF_8_yiddish.h" - stem header already included in amalgamation

typedef enum {
  ENC_UNKNOWN=0,
  ENC_ISO_8859_1,
  ENC_ISO_8859_2,
  ENC_KOI8_R,
  ENC_UTF_8
} stemmer_encoding_t;

struct stemmer_encoding {
  const char * name;
  stemmer_encoding_t enc;
};
static const struct stemmer_encoding encodings[] = {
  {"ISO_8859_1", ENC_ISO_8859_1},
  {"ISO_8859_2", ENC_ISO_8859_2},
  {"KOI8_R", ENC_KOI8_R},
  {"UTF_8", ENC_UTF_8},
  {0,ENC_UNKNOWN}
};

struct stemmer_modules {
  const char * name;
  stemmer_encoding_t enc;
  struct SN_env * (*create)(void);
  void (*close)(struct SN_env *);
  int (*stem)(struct SN_env *);
};
static const struct stemmer_modules modules[] = {
  {"ar", ENC_UTF_8, arabic_UTF_8_create_env, arabic_UTF_8_close_env, arabic_UTF_8_stem},
  {"ara", ENC_UTF_8, arabic_UTF_8_create_env, arabic_UTF_8_close_env, arabic_UTF_8_stem},
  {"arabic", ENC_UTF_8, arabic_UTF_8_create_env, arabic_UTF_8_close_env, arabic_UTF_8_stem},
  {"arm", ENC_UTF_8, armenian_UTF_8_create_env, armenian_UTF_8_close_env, armenian_UTF_8_stem},
  {"armenian", ENC_UTF_8, armenian_UTF_8_create_env, armenian_UTF_8_close_env, armenian_UTF_8_stem},
  {"baq", ENC_ISO_8859_1, basque_ISO_8859_1_create_env, basque_ISO_8859_1_close_env, basque_ISO_8859_1_stem},
  {"baq", ENC_UTF_8, basque_UTF_8_create_env, basque_UTF_8_close_env, basque_UTF_8_stem},
  {"basque", ENC_ISO_8859_1, basque_ISO_8859_1_create_env, basque_ISO_8859_1_close_env, basque_ISO_8859_1_stem},
  {"basque", ENC_UTF_8, basque_UTF_8_create_env, basque_UTF_8_close_env, basque_UTF_8_stem},
  {"ca", ENC_ISO_8859_1, catalan_ISO_8859_1_create_env, catalan_ISO_8859_1_close_env, catalan_ISO_8859_1_stem},
  {"ca", ENC_UTF_8, catalan_UTF_8_create_env, catalan_UTF_8_close_env, catalan_UTF_8_stem},
  {"cat", ENC_ISO_8859_1, catalan_ISO_8859_1_create_env, catalan_ISO_8859_1_close_env, catalan_ISO_8859_1_stem},
  {"cat", ENC_UTF_8, catalan_UTF_8_create_env, catalan_UTF_8_close_env, catalan_UTF_8_stem},
  {"catalan", ENC_ISO_8859_1, catalan_ISO_8859_1_create_env, catalan_ISO_8859_1_close_env, catalan_ISO_8859_1_stem},
  {"catalan", ENC_UTF_8, catalan_UTF_8_create_env, catalan_UTF_8_close_env, catalan_UTF_8_stem},
  {"da", ENC_ISO_8859_1, danish_ISO_8859_1_create_env, danish_ISO_8859_1_close_env, danish_ISO_8859_1_stem},
  {"da", ENC_UTF_8, danish_UTF_8_create_env, danish_UTF_8_close_env, danish_UTF_8_stem},
  {"dan", ENC_ISO_8859_1, danish_ISO_8859_1_create_env, danish_ISO_8859_1_close_env, danish_ISO_8859_1_stem},
  {"dan", ENC_UTF_8, danish_UTF_8_create_env, danish_UTF_8_close_env, danish_UTF_8_stem},
  {"danish", ENC_ISO_8859_1, danish_ISO_8859_1_create_env, danish_ISO_8859_1_close_env, danish_ISO_8859_1_stem},
  {"danish", ENC_UTF_8, danish_UTF_8_create_env, danish_UTF_8_close_env, danish_UTF_8_stem},
  {"de", ENC_ISO_8859_1, german_ISO_8859_1_create_env, german_ISO_8859_1_close_env, german_ISO_8859_1_stem},
  {"de", ENC_UTF_8, german_UTF_8_create_env, german_UTF_8_close_env, german_UTF_8_stem},
  {"deu", ENC_ISO_8859_1, german_ISO_8859_1_create_env, german_ISO_8859_1_close_env, german_ISO_8859_1_stem},
  {"deu", ENC_UTF_8, german_UTF_8_create_env, german_UTF_8_close_env, german_UTF_8_stem},
  {"dut", ENC_ISO_8859_1, dutch_ISO_8859_1_create_env, dutch_ISO_8859_1_close_env, dutch_ISO_8859_1_stem},
  {"dut", ENC_UTF_8, dutch_UTF_8_create_env, dutch_UTF_8_close_env, dutch_UTF_8_stem},
  {"dutch", ENC_ISO_8859_1, dutch_ISO_8859_1_create_env, dutch_ISO_8859_1_close_env, dutch_ISO_8859_1_stem},
  {"dutch", ENC_UTF_8, dutch_UTF_8_create_env, dutch_UTF_8_close_env, dutch_UTF_8_stem},
  {"dutch_porter", ENC_ISO_8859_1, dutch_porter_ISO_8859_1_create_env, dutch_porter_ISO_8859_1_close_env, dutch_porter_ISO_8859_1_stem},
  {"dutch_porter", ENC_UTF_8, dutch_porter_UTF_8_create_env, dutch_porter_UTF_8_close_env, dutch_porter_UTF_8_stem},
  {"el", ENC_UTF_8, greek_UTF_8_create_env, greek_UTF_8_close_env, greek_UTF_8_stem},
  {"ell", ENC_UTF_8, greek_UTF_8_create_env, greek_UTF_8_close_env, greek_UTF_8_stem},
  {"en", ENC_ISO_8859_1, english_ISO_8859_1_create_env, english_ISO_8859_1_close_env, english_ISO_8859_1_stem},
  {"en", ENC_UTF_8, english_UTF_8_create_env, english_UTF_8_close_env, english_UTF_8_stem},
  {"eng", ENC_ISO_8859_1, english_ISO_8859_1_create_env, english_ISO_8859_1_close_env, english_ISO_8859_1_stem},
  {"eng", ENC_UTF_8, english_UTF_8_create_env, english_UTF_8_close_env, english_UTF_8_stem},
  {"english", ENC_ISO_8859_1, english_ISO_8859_1_create_env, english_ISO_8859_1_close_env, english_ISO_8859_1_stem},
  {"english", ENC_UTF_8, english_UTF_8_create_env, english_UTF_8_close_env, english_UTF_8_stem},
  {"eo", ENC_UTF_8, esperanto_UTF_8_create_env, esperanto_UTF_8_close_env, esperanto_UTF_8_stem},
  {"epo", ENC_UTF_8, esperanto_UTF_8_create_env, esperanto_UTF_8_close_env, esperanto_UTF_8_stem},
  {"es", ENC_ISO_8859_1, spanish_ISO_8859_1_create_env, spanish_ISO_8859_1_close_env, spanish_ISO_8859_1_stem},
  {"es", ENC_UTF_8, spanish_UTF_8_create_env, spanish_UTF_8_close_env, spanish_UTF_8_stem},
  {"esl", ENC_ISO_8859_1, spanish_ISO_8859_1_create_env, spanish_ISO_8859_1_close_env, spanish_ISO_8859_1_stem},
  {"esl", ENC_UTF_8, spanish_UTF_8_create_env, spanish_UTF_8_close_env, spanish_UTF_8_stem},
  {"esperanto", ENC_UTF_8, esperanto_UTF_8_create_env, esperanto_UTF_8_close_env, esperanto_UTF_8_stem},
  {"est", ENC_UTF_8, estonian_UTF_8_create_env, estonian_UTF_8_close_env, estonian_UTF_8_stem},
  {"estonian", ENC_UTF_8, estonian_UTF_8_create_env, estonian_UTF_8_close_env, estonian_UTF_8_stem},
  {"et", ENC_UTF_8, estonian_UTF_8_create_env, estonian_UTF_8_close_env, estonian_UTF_8_stem},
  {"eu", ENC_ISO_8859_1, basque_ISO_8859_1_create_env, basque_ISO_8859_1_close_env, basque_ISO_8859_1_stem},
  {"eu", ENC_UTF_8, basque_UTF_8_create_env, basque_UTF_8_close_env, basque_UTF_8_stem},
  {"eus", ENC_ISO_8859_1, basque_ISO_8859_1_create_env, basque_ISO_8859_1_close_env, basque_ISO_8859_1_stem},
  {"eus", ENC_UTF_8, basque_UTF_8_create_env, basque_UTF_8_close_env, basque_UTF_8_stem},
  {"fi", ENC_ISO_8859_1, finnish_ISO_8859_1_create_env, finnish_ISO_8859_1_close_env, finnish_ISO_8859_1_stem},
  {"fi", ENC_UTF_8, finnish_UTF_8_create_env, finnish_UTF_8_close_env, finnish_UTF_8_stem},
  {"fin", ENC_ISO_8859_1, finnish_ISO_8859_1_create_env, finnish_ISO_8859_1_close_env, finnish_ISO_8859_1_stem},
  {"fin", ENC_UTF_8, finnish_UTF_8_create_env, finnish_UTF_8_close_env, finnish_UTF_8_stem},
  {"finnish", ENC_ISO_8859_1, finnish_ISO_8859_1_create_env, finnish_ISO_8859_1_close_env, finnish_ISO_8859_1_stem},
  {"finnish", ENC_UTF_8, finnish_UTF_8_create_env, finnish_UTF_8_close_env, finnish_UTF_8_stem},
  {"fr", ENC_ISO_8859_1, french_ISO_8859_1_create_env, french_ISO_8859_1_close_env, french_ISO_8859_1_stem},
  {"fr", ENC_UTF_8, french_UTF_8_create_env, french_UTF_8_close_env, french_UTF_8_stem},
  {"fra", ENC_ISO_8859_1, french_ISO_8859_1_create_env, french_ISO_8859_1_close_env, french_ISO_8859_1_stem},
  {"fra", ENC_UTF_8, french_UTF_8_create_env, french_UTF_8_close_env, french_UTF_8_stem},
  {"fre", ENC_ISO_8859_1, french_ISO_8859_1_create_env, french_ISO_8859_1_close_env, french_ISO_8859_1_stem},
  {"fre", ENC_UTF_8, french_UTF_8_create_env, french_UTF_8_close_env, french_UTF_8_stem},
  {"french", ENC_ISO_8859_1, french_ISO_8859_1_create_env, french_ISO_8859_1_close_env, french_ISO_8859_1_stem},
  {"french", ENC_UTF_8, french_UTF_8_create_env, french_UTF_8_close_env, french_UTF_8_stem},
  {"ga", ENC_ISO_8859_1, irish_ISO_8859_1_create_env, irish_ISO_8859_1_close_env, irish_ISO_8859_1_stem},
  {"ga", ENC_UTF_8, irish_UTF_8_create_env, irish_UTF_8_close_env, irish_UTF_8_stem},
  {"ger", ENC_ISO_8859_1, german_ISO_8859_1_create_env, german_ISO_8859_1_close_env, german_ISO_8859_1_stem},
  {"ger", ENC_UTF_8, german_UTF_8_create_env, german_UTF_8_close_env, german_UTF_8_stem},
  {"german", ENC_ISO_8859_1, german_ISO_8859_1_create_env, german_ISO_8859_1_close_env, german_ISO_8859_1_stem},
  {"german", ENC_UTF_8, german_UTF_8_create_env, german_UTF_8_close_env, german_UTF_8_stem},
  {"gle", ENC_ISO_8859_1, irish_ISO_8859_1_create_env, irish_ISO_8859_1_close_env, irish_ISO_8859_1_stem},
  {"gle", ENC_UTF_8, irish_UTF_8_create_env, irish_UTF_8_close_env, irish_UTF_8_stem},
  {"gre", ENC_UTF_8, greek_UTF_8_create_env, greek_UTF_8_close_env, greek_UTF_8_stem},
  {"greek", ENC_UTF_8, greek_UTF_8_create_env, greek_UTF_8_close_env, greek_UTF_8_stem},
  {"hi", ENC_UTF_8, hindi_UTF_8_create_env, hindi_UTF_8_close_env, hindi_UTF_8_stem},
  {"hin", ENC_UTF_8, hindi_UTF_8_create_env, hindi_UTF_8_close_env, hindi_UTF_8_stem},
  {"hindi", ENC_UTF_8, hindi_UTF_8_create_env, hindi_UTF_8_close_env, hindi_UTF_8_stem},
  {"hu", ENC_ISO_8859_2, hungarian_ISO_8859_2_create_env, hungarian_ISO_8859_2_close_env, hungarian_ISO_8859_2_stem},
  {"hu", ENC_UTF_8, hungarian_UTF_8_create_env, hungarian_UTF_8_close_env, hungarian_UTF_8_stem},
  {"hun", ENC_ISO_8859_2, hungarian_ISO_8859_2_create_env, hungarian_ISO_8859_2_close_env, hungarian_ISO_8859_2_stem},
  {"hun", ENC_UTF_8, hungarian_UTF_8_create_env, hungarian_UTF_8_close_env, hungarian_UTF_8_stem},
  {"hungarian", ENC_ISO_8859_2, hungarian_ISO_8859_2_create_env, hungarian_ISO_8859_2_close_env, hungarian_ISO_8859_2_stem},
  {"hungarian", ENC_UTF_8, hungarian_UTF_8_create_env, hungarian_UTF_8_close_env, hungarian_UTF_8_stem},
  {"hy", ENC_UTF_8, armenian_UTF_8_create_env, armenian_UTF_8_close_env, armenian_UTF_8_stem},
  {"hye", ENC_UTF_8, armenian_UTF_8_create_env, armenian_UTF_8_close_env, armenian_UTF_8_stem},
  {"id", ENC_ISO_8859_1, indonesian_ISO_8859_1_create_env, indonesian_ISO_8859_1_close_env, indonesian_ISO_8859_1_stem},
  {"id", ENC_UTF_8, indonesian_UTF_8_create_env, indonesian_UTF_8_close_env, indonesian_UTF_8_stem},
  {"ind", ENC_ISO_8859_1, indonesian_ISO_8859_1_create_env, indonesian_ISO_8859_1_close_env, indonesian_ISO_8859_1_stem},
  {"ind", ENC_UTF_8, indonesian_UTF_8_create_env, indonesian_UTF_8_close_env, indonesian_UTF_8_stem},
  {"indonesian", ENC_ISO_8859_1, indonesian_ISO_8859_1_create_env, indonesian_ISO_8859_1_close_env, indonesian_ISO_8859_1_stem},
  {"indonesian", ENC_UTF_8, indonesian_UTF_8_create_env, indonesian_UTF_8_close_env, indonesian_UTF_8_stem},
  {"irish", ENC_ISO_8859_1, irish_ISO_8859_1_create_env, irish_ISO_8859_1_close_env, irish_ISO_8859_1_stem},
  {"irish", ENC_UTF_8, irish_UTF_8_create_env, irish_UTF_8_close_env, irish_UTF_8_stem},
  {"it", ENC_ISO_8859_1, italian_ISO_8859_1_create_env, italian_ISO_8859_1_close_env, italian_ISO_8859_1_stem},
  {"it", ENC_UTF_8, italian_UTF_8_create_env, italian_UTF_8_close_env, italian_UTF_8_stem},
  {"ita", ENC_ISO_8859_1, italian_ISO_8859_1_create_env, italian_ISO_8859_1_close_env, italian_ISO_8859_1_stem},
  {"ita", ENC_UTF_8, italian_UTF_8_create_env, italian_UTF_8_close_env, italian_UTF_8_stem},
  {"italian", ENC_ISO_8859_1, italian_ISO_8859_1_create_env, italian_ISO_8859_1_close_env, italian_ISO_8859_1_stem},
  {"italian", ENC_UTF_8, italian_UTF_8_create_env, italian_UTF_8_close_env, italian_UTF_8_stem},
  {"kraaij_pohlmann", ENC_ISO_8859_1, dutch_ISO_8859_1_create_env, dutch_ISO_8859_1_close_env, dutch_ISO_8859_1_stem},
  {"kraaij_pohlmann", ENC_UTF_8, dutch_UTF_8_create_env, dutch_UTF_8_close_env, dutch_UTF_8_stem},
  {"lit", ENC_UTF_8, lithuanian_UTF_8_create_env, lithuanian_UTF_8_close_env, lithuanian_UTF_8_stem},
  {"lithuanian", ENC_UTF_8, lithuanian_UTF_8_create_env, lithuanian_UTF_8_close_env, lithuanian_UTF_8_stem},
  {"lt", ENC_UTF_8, lithuanian_UTF_8_create_env, lithuanian_UTF_8_close_env, lithuanian_UTF_8_stem},
  {"ne", ENC_UTF_8, nepali_UTF_8_create_env, nepali_UTF_8_close_env, nepali_UTF_8_stem},
  {"nep", ENC_UTF_8, nepali_UTF_8_create_env, nepali_UTF_8_close_env, nepali_UTF_8_stem},
  {"nepali", ENC_UTF_8, nepali_UTF_8_create_env, nepali_UTF_8_close_env, nepali_UTF_8_stem},
  {"nl", ENC_ISO_8859_1, dutch_ISO_8859_1_create_env, dutch_ISO_8859_1_close_env, dutch_ISO_8859_1_stem},
  {"nl", ENC_UTF_8, dutch_UTF_8_create_env, dutch_UTF_8_close_env, dutch_UTF_8_stem},
  {"nld", ENC_ISO_8859_1, dutch_ISO_8859_1_create_env, dutch_ISO_8859_1_close_env, dutch_ISO_8859_1_stem},
  {"nld", ENC_UTF_8, dutch_UTF_8_create_env, dutch_UTF_8_close_env, dutch_UTF_8_stem},
  {"no", ENC_ISO_8859_1, norwegian_ISO_8859_1_create_env, norwegian_ISO_8859_1_close_env, norwegian_ISO_8859_1_stem},
  {"no", ENC_UTF_8, norwegian_UTF_8_create_env, norwegian_UTF_8_close_env, norwegian_UTF_8_stem},
  {"nor", ENC_ISO_8859_1, norwegian_ISO_8859_1_create_env, norwegian_ISO_8859_1_close_env, norwegian_ISO_8859_1_stem},
  {"nor", ENC_UTF_8, norwegian_UTF_8_create_env, norwegian_UTF_8_close_env, norwegian_UTF_8_stem},
  {"norwegian", ENC_ISO_8859_1, norwegian_ISO_8859_1_create_env, norwegian_ISO_8859_1_close_env, norwegian_ISO_8859_1_stem},
  {"norwegian", ENC_UTF_8, norwegian_UTF_8_create_env, norwegian_UTF_8_close_env, norwegian_UTF_8_stem},
  {"por", ENC_ISO_8859_1, portuguese_ISO_8859_1_create_env, portuguese_ISO_8859_1_close_env, portuguese_ISO_8859_1_stem},
  {"por", ENC_UTF_8, portuguese_UTF_8_create_env, portuguese_UTF_8_close_env, portuguese_UTF_8_stem},
  {"porter", ENC_ISO_8859_1, porter_ISO_8859_1_create_env, porter_ISO_8859_1_close_env, porter_ISO_8859_1_stem},
  {"porter", ENC_UTF_8, porter_UTF_8_create_env, porter_UTF_8_close_env, porter_UTF_8_stem},
  {"portuguese", ENC_ISO_8859_1, portuguese_ISO_8859_1_create_env, portuguese_ISO_8859_1_close_env, portuguese_ISO_8859_1_stem},
  {"portuguese", ENC_UTF_8, portuguese_UTF_8_create_env, portuguese_UTF_8_close_env, portuguese_UTF_8_stem},
  {"pt", ENC_ISO_8859_1, portuguese_ISO_8859_1_create_env, portuguese_ISO_8859_1_close_env, portuguese_ISO_8859_1_stem},
  {"pt", ENC_UTF_8, portuguese_UTF_8_create_env, portuguese_UTF_8_close_env, portuguese_UTF_8_stem},
  {"ro", ENC_UTF_8, romanian_UTF_8_create_env, romanian_UTF_8_close_env, romanian_UTF_8_stem},
  {"romanian", ENC_UTF_8, romanian_UTF_8_create_env, romanian_UTF_8_close_env, romanian_UTF_8_stem},
  {"ron", ENC_UTF_8, romanian_UTF_8_create_env, romanian_UTF_8_close_env, romanian_UTF_8_stem},
  {"ru", ENC_KOI8_R, russian_KOI8_R_create_env, russian_KOI8_R_close_env, russian_KOI8_R_stem},
  {"ru", ENC_UTF_8, russian_UTF_8_create_env, russian_UTF_8_close_env, russian_UTF_8_stem},
  {"rum", ENC_UTF_8, romanian_UTF_8_create_env, romanian_UTF_8_close_env, romanian_UTF_8_stem},
  {"rus", ENC_KOI8_R, russian_KOI8_R_create_env, russian_KOI8_R_close_env, russian_KOI8_R_stem},
  {"rus", ENC_UTF_8, russian_UTF_8_create_env, russian_UTF_8_close_env, russian_UTF_8_stem},
  {"russian", ENC_KOI8_R, russian_KOI8_R_create_env, russian_KOI8_R_close_env, russian_KOI8_R_stem},
  {"russian", ENC_UTF_8, russian_UTF_8_create_env, russian_UTF_8_close_env, russian_UTF_8_stem},
  {"serbian", ENC_UTF_8, serbian_UTF_8_create_env, serbian_UTF_8_close_env, serbian_UTF_8_stem},
  {"spa", ENC_ISO_8859_1, spanish_ISO_8859_1_create_env, spanish_ISO_8859_1_close_env, spanish_ISO_8859_1_stem},
  {"spa", ENC_UTF_8, spanish_UTF_8_create_env, spanish_UTF_8_close_env, spanish_UTF_8_stem},
  {"spanish", ENC_ISO_8859_1, spanish_ISO_8859_1_create_env, spanish_ISO_8859_1_close_env, spanish_ISO_8859_1_stem},
  {"spanish", ENC_UTF_8, spanish_UTF_8_create_env, spanish_UTF_8_close_env, spanish_UTF_8_stem},
  {"sr", ENC_UTF_8, serbian_UTF_8_create_env, serbian_UTF_8_close_env, serbian_UTF_8_stem},
  {"srp", ENC_UTF_8, serbian_UTF_8_create_env, serbian_UTF_8_close_env, serbian_UTF_8_stem},
  {"sv", ENC_ISO_8859_1, swedish_ISO_8859_1_create_env, swedish_ISO_8859_1_close_env, swedish_ISO_8859_1_stem},
  {"sv", ENC_UTF_8, swedish_UTF_8_create_env, swedish_UTF_8_close_env, swedish_UTF_8_stem},
  {"swe", ENC_ISO_8859_1, swedish_ISO_8859_1_create_env, swedish_ISO_8859_1_close_env, swedish_ISO_8859_1_stem},
  {"swe", ENC_UTF_8, swedish_UTF_8_create_env, swedish_UTF_8_close_env, swedish_UTF_8_stem},
  {"swedish", ENC_ISO_8859_1, swedish_ISO_8859_1_create_env, swedish_ISO_8859_1_close_env, swedish_ISO_8859_1_stem},
  {"swedish", ENC_UTF_8, swedish_UTF_8_create_env, swedish_UTF_8_close_env, swedish_UTF_8_stem},
  {"ta", ENC_UTF_8, tamil_UTF_8_create_env, tamil_UTF_8_close_env, tamil_UTF_8_stem},
  {"tam", ENC_UTF_8, tamil_UTF_8_create_env, tamil_UTF_8_close_env, tamil_UTF_8_stem},
  {"tamil", ENC_UTF_8, tamil_UTF_8_create_env, tamil_UTF_8_close_env, tamil_UTF_8_stem},
  {"tr", ENC_UTF_8, turkish_UTF_8_create_env, turkish_UTF_8_close_env, turkish_UTF_8_stem},
  {"tur", ENC_UTF_8, turkish_UTF_8_create_env, turkish_UTF_8_close_env, turkish_UTF_8_stem},
  {"turkish", ENC_UTF_8, turkish_UTF_8_create_env, turkish_UTF_8_close_env, turkish_UTF_8_stem},
  {"yi", ENC_UTF_8, yiddish_UTF_8_create_env, yiddish_UTF_8_close_env, yiddish_UTF_8_stem},
  {"yid", ENC_UTF_8, yiddish_UTF_8_create_env, yiddish_UTF_8_close_env, yiddish_UTF_8_stem},
  {"yiddish", ENC_UTF_8, yiddish_UTF_8_create_env, yiddish_UTF_8_close_env, yiddish_UTF_8_stem},
  {0,ENC_UNKNOWN,0,0,0}
};
static const char * algorithm_names[] = {
  "arabic", 
  "armenian", 
  "basque", 
  "catalan", 
  "danish", 
  "dutch", 
  "dutch_porter", 
  "english", 
  "esperanto", 
  "estonian", 
  "finnish", 
  "french", 
  "german", 
  "greek", 
  "hindi", 
  "hungarian", 
  "indonesian", 
  "irish", 
  "italian", 
  "lithuanian", 
  "nepali", 
  "norwegian", 
  "porter", 
  "portuguese", 
  "romanian", 
  "russian", 
  "serbian", 
  "spanish", 
  "swedish", 
  "tamil", 
  "turkish", 
  "yiddish", 
  0
};


#endif /* __MODULES_H_H */

/* C++ extern "C" guard - closing */
#ifdef __cplusplus
}
#endif

#endif /* LIBSTEMMER_AMALGAMATION_H */
